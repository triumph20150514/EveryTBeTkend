package com.trimph.everytbetend.model.db;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.trimph.everytbetkend.model.Gallery;
import com.trimph.everytbetkend.model.Picture;
import com.trimph.everytbetkend.model.User;

import com.trimph.everytbetend.model.db.GalleryDao;
import com.trimph.everytbetend.model.db.PictureDao;
import com.trimph.everytbetend.model.db.UserDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig galleryDaoConfig;
    private final DaoConfig pictureDaoConfig;
    private final DaoConfig userDaoConfig;

    private final GalleryDao galleryDao;
    private final PictureDao pictureDao;
    private final UserDao userDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        galleryDaoConfig = daoConfigMap.get(GalleryDao.class).clone();
        galleryDaoConfig.initIdentityScope(type);

        pictureDaoConfig = daoConfigMap.get(PictureDao.class).clone();
        pictureDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        galleryDao = new GalleryDao(galleryDaoConfig, this);
        pictureDao = new PictureDao(pictureDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);

        registerDao(Gallery.class, galleryDao);
        registerDao(Picture.class, pictureDao);
        registerDao(User.class, userDao);
    }
    
    public void clear() {
        galleryDaoConfig.getIdentityScope().clear();
        pictureDaoConfig.getIdentityScope().clear();
        userDaoConfig.getIdentityScope().clear();
    }

    public GalleryDao getGalleryDao() {
        return galleryDao;
    }

    public PictureDao getPictureDao() {
        return pictureDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

}
